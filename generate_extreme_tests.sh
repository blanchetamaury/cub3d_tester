#!/bin/bash

# Comprehensive test generator to reach extensive coverage
# This script generates many more edge cases to achieve comprehensive testing

BASE_DIR="/home/runner/work/cub3d_tester/cub3d_tester/tests"
ASSETS_PATH="./assets"

# Generate extreme edge cases for existing categories
generate_extreme_header_tests() {
    local dir="${BASE_DIR}/header"
    local count=15
    
    # Test with very long texture identifier line
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug_north.png extra_text_that_should_not_be_here
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with texture identifier at end of line
    cat << EOF > "${dir}/${count}KO.cub"
${ASSETS_PATH}/debug_north.png NO
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with missing newline at end
    printf "NO ${ASSETS_PATH}/debug_north.png\nWE ${ASSETS_PATH}/debug_west.png\nSO ${ASSETS_PATH}/debug_south.png\nEA ${ASSETS_PATH}/debug_east.png\n\nC 0,0,255\nF 0,255,0\n\n11111\n10001\n10N01\n10001\n11111" > "${dir}/${count}KO.cub"
    ((count++))
    
    echo "Generated extreme header tests 15-17"
}

# Generate extreme color tests
generate_extreme_color_tests() {
    local dir="${BASE_DIR}/color"
    local count=14
    
    # Test with very large numbers
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 999999999999,0,0
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with only one RGB value
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 255
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with empty color section
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    echo "Generated extreme color tests 14-16"
}

# Generate extreme map tests
generate_extreme_map_tests() {
    local dir="${BASE_DIR}/map"
    local count=18
    
    # Test with map before colors
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

11111
10001
10N01
10001
11111

C 0,0,255
F 0,255,0
EOF
    ((count++))
    
    # Test with multiple maps
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

11111
10001
10N01
10001
11111

11111
10001
10S01
10001
11111
EOF
    ((count++))
    
    # Test with very tall map
    cat << EOF > "${dir}/${count}OK.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

111111111
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
1000N0001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
100000001
111111111
EOF
    ((count++))
    
    echo "Generated extreme map tests 18-20"
}

# Generate additional texture validation tests
generate_additional_texture_tests() {
    local dir="${BASE_DIR}/texture_validation"
    local count=11
    
    # Test with texture path containing spaces
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with relative path traversal
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/../assets/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with quoted paths
    cat << EOF > "${dir}/${count}KO.cub"
NO "${ASSETS_PATH}/debug_north.png"
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with URL-like paths
    cat << EOF > "${dir}/${count}KO.cub"
NO http://example.com/texture.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with texture identifier in wrong case
    cat << EOF > "${dir}/${count}KO.cub"
no ${ASSETS_PATH}/debug_north.png
we ${ASSETS_PATH}/debug_west.png
so ${ASSETS_PATH}/debug_south.png
ea ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    echo "Generated additional texture validation tests 11-15"
}

# Generate additional boundary condition tests
generate_additional_boundary_tests() {
    local dir="${BASE_DIR}/boundary_conditions"
    local count=9
    
    # Test with RGB values as strings
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C "255","0","0"
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with very precise decimal values
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 255.0,0.0,0.0
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    # Test with commas in wrong places
    cat << EOF > "${dir}/${count}KO.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C ,255,0,0
F 0,255,0

11111
10001
10N01
10001
11111
EOF
    ((count++))
    
    echo "Generated additional boundary condition tests 09-11"
}

# Generate stress test variations
generate_stress_test_variations() {
    local dir="${BASE_DIR}/memory_stress"
    local count=2
    
    # Generate a map with many internal walls (maze-like)
    cat << EOF > "${dir}/${count}OK.cub"
NO ${ASSETS_PATH}/debug_north.png
WE ${ASSETS_PATH}/debug_west.png
SO ${ASSETS_PATH}/debug_south.png
EA ${ASSETS_PATH}/debug_east.png

C 0,0,255
F 0,255,0

11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
1010101010101010101010101010101010101010101010101010101010101010101N101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
EOF
    ((count++))
    
    echo "Generated stress test variation 02"
}

# Main execution
echo "Generating extreme comprehensive test coverage..."

# Create tests
generate_extreme_header_tests
generate_extreme_color_tests
generate_extreme_map_tests
generate_additional_texture_tests
generate_additional_boundary_tests
generate_stress_test_variations

echo "Extreme test generation complete!"
echo "Total test files now: $(find "${BASE_DIR}" -name "*.cub" | wc -l)"